{ modulesPath, config, pkgs, ... }:
let
  IP = "192.168.178.101";
in
{
  imports =
    [
      # Include the default lxc/lxd configuration.
      "${modulesPath}/virtualisation/lxc-container.nix"
      # Include the container-specific autogenerated configuration.
      #./lxd.nix - this has to be commented out from the system tarball
      ./../../services/ssh/root.nix
    ];
  boot.isContainer = true;

  networking.hostName = "nixnetbox";
  networking.domain = "lan";
  # I had to suppress these units, since they do not work inside LXC
  systemd.suppressedSystemUnits = [
    "dev-mqueue.mount"
    "sys-kernel-debug.mount"
    "sys-fs-fuse-connections.mount"
  ];

  networking.interfaces.eth0.ipv4.addresses = [{
    address = IP;
    prefixLength = 24;
  }];
  networking.defaultGateway = "192.168.178.1";
  networking.nameservers = [ "9.9.9.9" ];
  services.netbox.listenAddress = IP;

  # A few packages I like to have around
  environment.systemPackages = with pkgs; [
    openssh
    openssl
  ];
  users.users = import ./../../user/root.nix { inherit pkgs; };

  networking.firewall.allowedTCPPorts = [ 80 443 ];

  services.netbox = {
    enable = true;
    secretKeyFile = "/var/lib/netbox/secret-key-file";
  };

  services.nginx = {
    enable = true;
    user = "netbox";
    recommendedTlsSettings = false;
    clientMaxBodySize = "25m";
    recommendedProxySettings = true; # otherwise you will get CSRF error while login
    virtualHosts.${IP} = {
      locations = {
        "/" = {
          proxyPass = "http://192.168.178.101:8001";
          # proxyPass = "http://${config.services.netbox.listenAddress}:${config.services.netbox.port}";
        };
        "/static/" = { alias = "${config.services.netbox.dataDir}/static/"; };
      };
      forceSSL = false;
      enableACME = false;
      serverName = "${config.networking.hostName}";
    };
  };

  security.acme = {
    defaults.email = "acme@${config.networking.domain}";
    acceptTerms = true;
  };




  system.stateVersion = "25.05"; # Did you read the comment?
}
